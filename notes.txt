
instructions

each takes one cycle

NOP     0000
ADD     0001    (R type)
ADDI    0010    (I type)
AND     0011    (R type)
ANDI    0100    (I type)
NOT     0101    (R type)
BEQA    0110    (J type)    (absolute addressing)
BEQR    0111    (J type)    (relative addressing only)
HLT     1000   
LB      1001    (R type)
SB      1010    (R type)
LSR     1011    (R type)
LSL     1100    (R type)
INC     1101    (R type)
DEC     1110    (R type)


I instructions
|4 bit opcode|      |2 bit op1|    |2 bit op2|       |immediate|

    1111                11              11            11111111 (-32 => 31)


R instructions   

|4 bit opcode|      |4 bit op1|    |4 bit op2|       |4 bit op3|
    1111               1111           1111              1111

shift instructions

    1111               1111           1111              1 111    

J instructions (offset not used by the BEQA instruction instead the address contained in the AR register is used)

|4 bit opcode|       |12 bit offset|
    1111              111111111111


    2^16 bytes memory addressable 

Registers (PC and AR registers are 16 bit registers, the upper 8 bits are accessed using the base index + 1)
  |Reg|   |index|
    W       0000    W and X can be accessed as a 16 bit A register.
    X       0001    
    Y       0010    Y and Z can be accessed as a 16 bit B register.
    Z       0011    
    
    PC      0100    
    PCU     0101    
    SP      0110    
    SR      0111    
    
    A and B can be used with memory and jump instructions but not logical and arithmetic instructions.

    A 0000

    B 0010


    status register

    8bits (2 flags not used)
    Z S V C P R X X
    1 1 1 1 1 1 1 1
zero sign overflow carry parity reset  X X
(flags are set based on the output of an AL instruction)

xxxx Q000 0000 0000
 C    8     0    9

 op   I/R   
xxxx   1    
R-type        op1    op2     op3 
              111   1111     1111

I-type        op1    op2    unused => second 2 bytes store immediate
              111   1111     xxxx              1111 1111 1111 1111
